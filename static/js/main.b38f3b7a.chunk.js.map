{"version":3,"sources":["logo.svg","Images/hobbit.JPG","Images/vanHills.JPG","Images/kaikoura.JPG","Images/bineBondi.JPG","Components/Pieces/ThemeSwitch/ThemeSwitch.tsx","Components/Pages/Home/Home.tsx","Components/Pages/About/About.tsx","Components/Pages/BiSamples/BiSamples.tsx","Components/Pages/Contact/Contact.tsx","Components/Pages/CV/CV.tsx","Components/Pieces/Header/Header.tsx","Router/Router.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","ThemeSwitch","props","themeForState","labelForState","checkedBoolForState","handleThemeClick","oldThemeState","state","themeState","repeat","themeLabel","checkedBool","setState","localStorage","setItem","document","body","classList","replace","onClick","existingTheme","getItem","add","Form","className","Check","type","id","label","this","checked","readOnly","React","Component","Home","timer","handleOnClick","path","history","push","loaded","setTimeout","clearInterval","style","backgroundImage","require","backgroundPosition","withRouter","About","target","rel","href","BiSamples","Contact","CV","Header","activeLink","location","pathname","handleThemeOnClick","themeIsLight","lightTheme","Navbar","collapseOnSelect","variant","undefined","expand","Brand","alt","src","logo","width","height","Toggle","aria-controls","Collapse","Nav","Link","MyRouter","basename","exact","component","DefaultContainer","HomeContainer","to","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b38f3b7a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/hobbit.734733bb.JPG\";","module.exports = __webpack_public_path__ + \"static/media/vanHills.932a82ea.JPG\";","module.exports = __webpack_public_path__ + \"static/media/kaikoura.dcdb19c7.JPG\";","module.exports = __webpack_public_path__ + \"static/media/bineBondi.c903e910.JPG\";","import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport \"./ThemeSwitch.css\";\r\n\r\ninterface ThemeProps {\r\n    onClick: Function;\r\n}\r\n\r\ninterface ThemeState {\r\n    themeState: string;\r\n    themeLabel: string;\r\n    checkedBool: boolean;\r\n}\r\n\r\nexport default class ThemeSwitch extends React.Component<\r\n    ThemeProps,\r\n    ThemeState\r\n> {\r\n    constructor(props) {\r\n        super(props);\r\n        let themeForState: string;\r\n        let labelForState: string;\r\n        let checkedBoolForState: boolean;\r\n\r\n        const existingTheme = localStorage.getItem(\"themeState\");\r\n        if (existingTheme) {\r\n            themeForState = existingTheme;\r\n            checkedBoolForState = themeForState === \"light\" ? false : true;\r\n        } else {\r\n            themeForState = \"dark\";\r\n            checkedBoolForState = false;\r\n        }\r\n        labelForState = themeForState === \"light\" ? \"ðŸ”Œ\" : \"ðŸ’¡\";\r\n        this.state = {\r\n            themeState: themeForState,\r\n            themeLabel: labelForState,\r\n            checkedBool: checkedBoolForState,\r\n        };\r\n        localStorage.setItem(\"themeState\", this.state.themeState);\r\n        document.body.classList.add(this.state.themeState);\r\n    }\r\n    handleThemeClick = () => {\r\n        const oldThemeState = this.state.themeState.repeat(1); // copy string (not reference)\r\n        const themeState = this.state.themeState === \"light\" ? \"dark\" : \"light\";\r\n        const themeLabel = themeState === \"light\" ? \"ðŸ”Œ\" : \"ðŸ’¡\";\r\n        const checkedBool = themeState === \"light\" ? false : true;\r\n        this.setState({\r\n            themeState: themeState,\r\n            themeLabel: themeLabel,\r\n            checkedBool: checkedBool,\r\n        });\r\n        localStorage.setItem(\"themeState\", themeState);\r\n        document.body.classList.replace(oldThemeState, themeState);\r\n        this.props.onClick();\r\n    };\r\n    render() {\r\n        return (\r\n            <Form className=\"switchForm\">\r\n                <Form.Check\r\n                    type=\"switch\"\r\n                    id=\"light-switch\"\r\n                    className=\"custom-switch\"\r\n                    // label={this.state.themeLabel}\r\n                    label=\"\"\r\n                    onClick={this.handleThemeClick}\r\n                    checked={this.state.checkedBool}\r\n                    readOnly\r\n                />\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport \"./Home.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport ThemeSwitch from \"../../Pieces/ThemeSwitch/ThemeSwitch\";\r\n\r\ninterface HomeProps {\r\n    history: string[];\r\n}\r\n\r\ninterface HomeState {\r\n    loaded: boolean;\r\n}\r\n\r\nclass Home extends React.Component<HomeProps, HomeState> {\r\n    // remove animation from card after page has loaded\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { loaded: false };\r\n    }\r\n    // after 1800ms add animate-after-load class to cards so that they do not delay on hover\r\n    timer: any;\r\n    componentDidMount() {\r\n        this.timer = setTimeout(() => this.setState({ loaded: true }), 1800);\r\n    }\r\n    componentWillUnmount() {\r\n        clearInterval(this.timer);\r\n    }\r\n    handleOnClick = (path: string) => {\r\n        this.props.history.push(path);\r\n    };\r\n    render() {\r\n        return (\r\n            <>\r\n                <ThemeSwitch onClick={() => {}} />\r\n                <section className=\"animated-grid\">\r\n                    <div\r\n                        className={\r\n                            \"card\" +\r\n                            (this.state.loaded ? \" animate-after-load\" : \"\")\r\n                        }\r\n                        style={{\r\n                            backgroundImage: `url(${require(\"../../../Images/hobbit.JPG\")})`,\r\n                            backgroundPosition: \"center\",\r\n                        }}\r\n                        onClick={() => this.handleOnClick(\"/about\")}\r\n                    >\r\n                        <span className=\"cardText\">About</span>\r\n                    </div>\r\n                    <div\r\n                        className={\r\n                            \"card\" +\r\n                            (this.state.loaded ? \" animate-after-load\" : \"\")\r\n                        }\r\n                        style={{\r\n                            backgroundImage: `url(${require(\"../../../Images/vanHills.JPG\")})`,\r\n                            backgroundPosition: \"right top\",\r\n                        }}\r\n                        onClick={() => this.handleOnClick(\"/cv\")}\r\n                    >\r\n                        <span className=\"cardText\">Interactive CV</span>\r\n                    </div>\r\n                    <div\r\n                        className={\r\n                            \"card\" +\r\n                            (this.state.loaded ? \" animate-after-load\" : \"\")\r\n                        }\r\n                        style={{\r\n                            backgroundImage: `url(${require(\"../../../Images/kaikoura.JPG\")})`,\r\n                            backgroundPosition: \"center\",\r\n                        }}\r\n                        onClick={() => this.handleOnClick(\"/biSamples\")}\r\n                    >\r\n                        <span className=\"cardText\">BI Samples</span>\r\n                    </div>\r\n                    <div\r\n                        className={\r\n                            \"card\" +\r\n                            (this.state.loaded ? \" animate-after-load\" : \"\")\r\n                        }\r\n                        style={{\r\n                            backgroundImage: `url(${require(\"../../../Images/bineBondi.JPG\")})`,\r\n                            backgroundPosition: \"center top\",\r\n                        }}\r\n                        onClick={() => this.handleOnClick(\"/contact\")}\r\n                    >\r\n                        <span className=\"cardText\">Contact</span>\r\n                    </div>\r\n                </section>\r\n            </>\r\n        );\r\n    }\r\n}\r\nexport default withRouter(Home);\r\n","import React from \"react\";\r\nimport \"./About.css\";\r\n\r\nclass About extends React.Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"about-div\">\r\n                    {/* <h1>About</h1> */}\r\n                    <p className=\"about-para\">\r\n                        <br />\r\n                        Hi, my name is David ðŸ‘‹. Some people call me Ryne. I was\r\n                        born and raised in{\" \"}\r\n                        <a\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                            href=\"https://www.google.com/maps/place/Iowa+City,+IA,+USA/@41.64716,-91.6094031,12z/data=!3m1!4b1!4m5!3m4!1s0x87e441c16a208817:0x6d711867870582b0!8m2!3d41.6611277!4d-91.5301683\"\r\n                        >\r\n                            Iowa City, Iowa, USA\r\n                        </a>{\" \"}\r\n                        and moved to{\" \"}\r\n                        <a\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                            href=\"https://www.google.com/maps/place/Stockholm/@59.3261917,17.7018811,10z/data=!3m1!4b1!4m5!3m4!1s0x465f763119640bcb:0xa80d27d3679d7766!8m2!3d59.3293235!4d18.0685808\"\r\n                        >\r\n                            Stockholm, SE\r\n                        </a>{\" \"}\r\n                        in 2017.\r\n                        <br />\r\n                        <br />\r\n                        After relocating to Sweden with my wife, I changed\r\n                        fields from Biology to data and programming. From\r\n                        2018-2019 I worked as a Data Analyst for Radisson Hotel\r\n                        Group in Sweden and currently work as a BI developer for\r\n                        Radisson Hotel Group in Belgium (while still being based\r\n                        in Sweden).\r\n                        <br />\r\n                        <br />\r\n                        We have a 1-year-old son (Jack) and are currently living\r\n                        in Solna. In my spare time I like to play tennis and\r\n                        learn new things (usually related to programming).\r\n                    </p>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\nexport default About;\r\n","import React from \"react\";\r\nimport \"./BiSamples.css\";\r\n\r\nclass BiSamples extends React.Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <div>BiSamples</div>\r\n            </>\r\n        );\r\n    }\r\n}\r\nexport default BiSamples;\r\n","import React from \"react\";\r\nimport \"./Contact.css\";\r\n\r\nclass Contact extends React.Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <div>Contact</div>\r\n            </>\r\n        );\r\n    }\r\n}\r\nexport default Contact;\r\n","import React from \"react\";\r\nimport \"./CV.css\";\r\n\r\nclass CV extends React.Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <div>CV</div>\r\n            </>\r\n        );\r\n    }\r\n}\r\nexport default CV;\r\n","import React from \"react\";\r\nimport \"./Header.css\";\r\nimport logo from \"../../../logo.svg\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport ThemeSwitch from \"../ThemeSwitch/ThemeSwitch\";\r\n\r\ninterface HeaderProps {\r\n    history: any;\r\n}\r\n\r\ninterface HeaderState {\r\n    activeLink: string;\r\n    lightTheme: boolean;\r\n}\r\n\r\nclass Header extends React.Component<HeaderProps, HeaderState> {\r\n    constructor(props) {\r\n        super(props);\r\n        // similar logic used in ThemeSwitch to determine theme\r\n        const existingTheme = localStorage.getItem(\"themeState\");\r\n        let themeIsLight: boolean;\r\n        if (existingTheme) {\r\n            themeIsLight = existingTheme === \"light\" ? true : false;\r\n        } else {\r\n            themeIsLight = false;\r\n        }\r\n        this.state = {\r\n            activeLink: this.props.history.location.pathname,\r\n            lightTheme: themeIsLight,\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        // get theme from ThemeSwitch and create boolean to use in variant in jsx\r\n    }\r\n    handleOnClick = (path: string) => {\r\n        this.props.history.push(path);\r\n\r\n        this.setState({ activeLink: this.props.history.location.pathname });\r\n    };\r\n    handleThemeOnClick = () => {\r\n        const existingTheme = localStorage.getItem(\"themeState\");\r\n        let themeIsLight: boolean;\r\n        if (existingTheme) {\r\n            themeIsLight = existingTheme === \"light\" ? true : false;\r\n        } else {\r\n            themeIsLight = false;\r\n        }\r\n        this.setState((state) => {\r\n            return {\r\n                activeLink: state.activeLink,\r\n                lightTheme: themeIsLight,\r\n            };\r\n        });\r\n    };\r\n    render() {\r\n        return (\r\n            <>\r\n                <Navbar\r\n                    collapseOnSelect\r\n                    // bg=\"dark\"\r\n                    variant={this.state.lightTheme ? undefined : \"dark\"}\r\n                    expand=\"md\"\r\n                    className=\"navbar\"\r\n                >\r\n                    {/* <Navbar className=\"navbar\"> */}\r\n                    <Navbar.Brand href=\"/\" className=\"navlink\">\r\n                        <img\r\n                            alt=\"logo\"\r\n                            src={logo}\r\n                            width=\"30\"\r\n                            height=\"30\"\r\n                            className=\"d-inline-block align-top Spinning-logo\"\r\n                        />{\" \"}\r\n                        David Ryne Zear\r\n                    </Navbar.Brand>\r\n                    <Navbar.Toggle\r\n                        aria-controls=\"responsive-navbar-nav\"\r\n                        // className=\"navbar-collapse\"\r\n                    />\r\n                    <Navbar.Collapse\r\n                        id=\"responsive-navbar-nav\"\r\n                        className=\"navbar-collapse\"\r\n                    >\r\n                        <Nav className=\"ml-auto\">\r\n                            <Nav.Link\r\n                                className={\r\n                                    \"navlink\" +\r\n                                    (this.state.activeLink === \"/about\"\r\n                                        ? \" active-navlink\"\r\n                                        : \"\")\r\n                                }\r\n                                onClick={() => this.handleOnClick(\"/about\")}\r\n                            >\r\n                                About\r\n                            </Nav.Link>\r\n                            <Nav.Link\r\n                                className={\r\n                                    \"navlink\" +\r\n                                    (this.state.activeLink === \"/cv\"\r\n                                        ? \" active-navlink\"\r\n                                        : \"\")\r\n                                }\r\n                                onClick={() => this.handleOnClick(\"/cv\")}\r\n                            >\r\n                                Interactive CV\r\n                            </Nav.Link>\r\n                            <Nav.Link\r\n                                className={\r\n                                    \"navlink\" +\r\n                                    (this.state.activeLink === \"/contact\"\r\n                                        ? \" active-navlink\"\r\n                                        : \"\")\r\n                                }\r\n                                onClick={() => this.handleOnClick(\"/contact\")}\r\n                            >\r\n                                Contact\r\n                            </Nav.Link>\r\n                            <Nav.Link\r\n                                className={\r\n                                    \"navlink\" +\r\n                                    (this.state.activeLink === \"/biSamples\"\r\n                                        ? \" active-navlink\"\r\n                                        : \"\")\r\n                                }\r\n                                onClick={() => this.handleOnClick(\"/biSamples\")}\r\n                            >\r\n                                BI Samples\r\n                            </Nav.Link>\r\n                        </Nav>\r\n                        <ThemeSwitch\r\n                            onClick={() => this.handleThemeOnClick()}\r\n                        />\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Header);\r\n","import React from \"react\";\r\nimport Home from \"../Components/Pages/Home/Home\";\r\nimport About from \"../Components/Pages/About/About\";\r\nimport BiSamples from \"../Components/Pages/BiSamples/BiSamples\";\r\nimport Contact from \"../Components/Pages/Contact/Contact\";\r\nimport CV from \"../Components/Pages/CV/CV\";\r\nimport { BrowserRouter, Route, Redirect, Switch } from \"react-router-dom\";\r\nimport Header from \"../Components/Pieces/Header/Header\";\r\n\r\nclass MyRouter extends React.Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <BrowserRouter basename=\"/\">\r\n                    <Switch>\r\n                        <Route\r\n                            exact\r\n                            path=\"/about\"\r\n                            component={DefaultContainer}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path=\"/biSamples\"\r\n                            component={DefaultContainer}\r\n                        />\r\n                        <Route exact path=\"/cv\" component={DefaultContainer} />\r\n                        <Route\r\n                            exact\r\n                            path=\"/contact\"\r\n                            component={DefaultContainer}\r\n                        />\r\n                        <Route exact path=\"/home\" component={HomeContainer} />\r\n                        <Route exact path=\"/\" component={HomeContainer} />\r\n                        <Route>\r\n                            <Redirect to=\"/\" />\r\n                        </Route>\r\n                    </Switch>\r\n                </BrowserRouter>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst HomeContainer = () => (\r\n    <>\r\n        <Route exact path=\"/home\" component={Home} />\r\n        <Route path=\"/\" component={Home} />\r\n    </>\r\n);\r\n\r\nconst DefaultContainer = () => (\r\n    <>\r\n        <Header />\r\n        <Route exact path=\"/about\" component={About} />\r\n        <Route exact path=\"/biSamples\" component={BiSamples} />\r\n        <Route exact path=\"/cv\" component={CV} />\r\n        <Route exact path=\"/contact\" component={Contact} />\r\n    </>\r\n);\r\n\r\nexport default MyRouter;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport MyRouter from \"./Router/Router\";\n\nfunction App() {\n    return <MyRouter />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}