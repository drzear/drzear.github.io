{"version":3,"sources":["logo.svg","Images/hobbit.JPG","Images/vanHills.JPG","Images/kaikoura.JPG","Images/bineBondi.JPG","Components/Pieces/ThemeSwitch/ThemeSwitch.tsx","Components/Pages/Home/Home.tsx","Components/Pages/About/About.tsx","Components/Pages/BiSamples/BiSamples.tsx","Components/Pages/Contact/Contact.tsx","Components/Pages/CV/CV.tsx","Components/Pieces/Header/Header.tsx","Router/Router.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","ThemeSwitch","props","themeForState","labelForState","checkedBoolForState","handleThemeClick","oldThemeState","state","themeState","repeat","themeLabel","checkedBool","setState","localStorage","setItem","document","body","classList","replace","existingTheme","getItem","add","Form","className","Check","type","id","label","onClick","this","checked","readOnly","React","Component","Home","handleOnClick","path","history","push","loaded","Promise","resolve","setTimeout","a","currentClass","setStateAsync","style","backgroundImage","require","backgroundPosition","withRouter","About","target","rel","href","BiSamples","Contact","CV","Header","activeLink","location","pathname","console","log","Navbar","Brand","alt","src","logo","width","height","Nav","Link","MyRouter","basename","exact","component","DefaultContainer","HomeContainer","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.db4f2e41.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/hobbit.734733bb.JPG\";","module.exports = __webpack_public_path__ + \"static/media/vanHills.932a82ea.JPG\";","module.exports = __webpack_public_path__ + \"static/media/kaikoura.dcdb19c7.JPG\";","module.exports = __webpack_public_path__ + \"static/media/bineBondi.c903e910.JPG\";","import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport \"./ThemeSwitch.css\";\r\n\r\ninterface ThemeProps {}\r\n\r\ninterface ThemeState {\r\n    themeState: string;\r\n    themeLabel: string;\r\n    checkedBool: boolean;\r\n}\r\n\r\nexport default class ThemeSwitch extends React.Component<\r\n    ThemeProps,\r\n    ThemeState\r\n> {\r\n    constructor(props) {\r\n        super(props);\r\n        let themeForState: string;\r\n        let labelForState: string;\r\n        let checkedBoolForState: boolean;\r\n\r\n        const existingTheme = localStorage.getItem(\"themeState\");\r\n        if (existingTheme) {\r\n            themeForState = existingTheme;\r\n            checkedBoolForState = themeForState === \"light\" ? false : true;\r\n        } else {\r\n            themeForState = \"light\";\r\n            checkedBoolForState = false;\r\n        }\r\n        labelForState = themeForState === \"light\" ? \"ðŸ”Œ\" : \"ðŸ’¡\";\r\n        this.state = {\r\n            themeState: themeForState,\r\n            themeLabel: labelForState,\r\n            checkedBool: checkedBoolForState,\r\n        };\r\n        localStorage.setItem(\"themeState\", this.state.themeState);\r\n        document.body.classList.add(this.state.themeState);\r\n    }\r\n    handleThemeClick = () => {\r\n        const oldThemeState = this.state.themeState.repeat(1); // copy string (not reference)\r\n        const themeState = this.state.themeState === \"light\" ? \"dark\" : \"light\";\r\n        const themeLabel = themeState === \"light\" ? \"ðŸ”Œ\" : \"ðŸ’¡\";\r\n        const checkedBool = themeState === \"light\" ? false : true;\r\n        this.setState({\r\n            themeState: themeState,\r\n            themeLabel: themeLabel,\r\n            checkedBool: checkedBool,\r\n        });\r\n        localStorage.setItem(\"themeState\", themeState);\r\n        document.body.classList.replace(oldThemeState, themeState);\r\n    };\r\n    render() {\r\n        return (\r\n            <Form className=\"switchForm\">\r\n                <Form.Check\r\n                    type=\"switch\"\r\n                    id=\"light-switch\"\r\n                    className=\"custom-switch\"\r\n                    // label={this.state.themeLabel}\r\n                    label=\"\"\r\n                    onClick={this.handleThemeClick}\r\n                    checked={this.state.checkedBool}\r\n                    readOnly\r\n                />\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport \"./Home.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport ThemeSwitch from \"../../Pieces/ThemeSwitch/ThemeSwitch\";\r\n\r\ninterface HomeProps {\r\n    history: string[];\r\n}\r\n\r\ninterface HomeState {\r\n    loaded: boolean;\r\n}\r\n\r\nclass Home extends React.Component<HomeProps, HomeState> {\r\n    // remove animation from card after page has loaded\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { loaded: false };\r\n    }\r\n    async setStateAsync(state) {\r\n        return new Promise((resolve) => {\r\n            this.setState(state, resolve);\r\n        });\r\n    }\r\n    componentDidMount() {\r\n        setTimeout(() => {\r\n            (async () => {\r\n                try {\r\n                    const currentClass = document.body.className;\r\n                    document.body.className = currentClass + \" no-duration\";\r\n                    await this.setStateAsync({ loaded: true });\r\n                    setTimeout(() => {\r\n                        document.body.className = currentClass;\r\n                    }, 300);\r\n                } catch (e) {\r\n                    this.setState({ loaded: true });\r\n                }\r\n            })();\r\n\r\n            // const currentClass = document.body.className;\r\n            // document.body.className = currentClass + \" no-duration\";\r\n            // // await this.setStateAsync({loaded:true})\r\n            // this.setState({ loaded: true }, () => {\r\n            //     // document.body.className = currentClass;\r\n            // });\r\n        }, 1800);\r\n    }\r\n    handleOnClick = (path: string) => {\r\n        this.props.history.push(path);\r\n    };\r\n    render() {\r\n        return (\r\n            <>\r\n                <ThemeSwitch />\r\n                <section className=\"animated-grid\">\r\n                    <div\r\n                        className={\r\n                            \"card\" +\r\n                            (this.state.loaded\r\n                                ? \" animate-after-load\"\r\n                                : \" animate-on-load\")\r\n                        }\r\n                        style={{\r\n                            backgroundImage: `url(${require(\"../../../Images/hobbit.JPG\")})`,\r\n                            backgroundPosition: \"center\",\r\n                        }}\r\n                        onClick={() => this.handleOnClick(\"/about\")}\r\n                    >\r\n                        <span className=\"cardText\">About</span>\r\n                    </div>\r\n                    <div\r\n                        className={\r\n                            \"card\" +\r\n                            (this.state.loaded\r\n                                ? \" animate-after-load\"\r\n                                : \" animate-on-load\")\r\n                        }\r\n                        style={{\r\n                            backgroundImage: `url(${require(\"../../../Images/vanHills.JPG\")})`,\r\n                            backgroundPosition: \"right top\",\r\n                        }}\r\n                        onClick={() => this.handleOnClick(\"/cv\")}\r\n                    >\r\n                        <span className=\"cardText\">Interactive CV</span>\r\n                    </div>\r\n                    <div\r\n                        className={\r\n                            \"card\" +\r\n                            (this.state.loaded\r\n                                ? \" animate-after-load\"\r\n                                : \" animate-on-load\")\r\n                        }\r\n                        style={{\r\n                            backgroundImage: `url(${require(\"../../../Images/kaikoura.JPG\")})`,\r\n                            backgroundPosition: \"center\",\r\n                        }}\r\n                        onClick={() => this.handleOnClick(\"/biSamples\")}\r\n                    >\r\n                        <span className=\"cardText\">BI Samples</span>\r\n                    </div>\r\n                    <div\r\n                        className={\r\n                            \"card\" +\r\n                            (this.state.loaded\r\n                                ? \" animate-after-load\"\r\n                                : \" animate-on-load\")\r\n                        }\r\n                        style={{\r\n                            backgroundImage: `url(${require(\"../../../Images/bineBondi.JPG\")})`,\r\n                            backgroundPosition: \"center top\",\r\n                        }}\r\n                        onClick={() => this.handleOnClick(\"/contact\")}\r\n                    >\r\n                        <span className=\"cardText\">Contact</span>\r\n                    </div>\r\n                </section>\r\n            </>\r\n        );\r\n    }\r\n}\r\nexport default withRouter(Home);\r\n","import React from \"react\";\r\nimport \"./About.css\";\r\n\r\nclass About extends React.Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"about-div\">\r\n                    {/* <h1>About</h1> */}\r\n                    <p className=\"about-para\">\r\n                        <br />\r\n                        Hi, my name is David ðŸ‘‹. Some people call me Ryne. I was\r\n                        born and raised in{\" \"}\r\n                        <a\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                            href=\"https://www.google.com/maps/place/Iowa+City,+IA,+USA/@41.64716,-91.6094031,12z/data=!3m1!4b1!4m5!3m4!1s0x87e441c16a208817:0x6d711867870582b0!8m2!3d41.6611277!4d-91.5301683\"\r\n                        >\r\n                            Iowa City, Iowa, USA\r\n                        </a>{\" \"}\r\n                        and moved to{\" \"}\r\n                        <a\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                            href=\"https://www.google.com/maps/place/Stockholm/@59.3261917,17.7018811,10z/data=!3m1!4b1!4m5!3m4!1s0x465f763119640bcb:0xa80d27d3679d7766!8m2!3d59.3293235!4d18.0685808\"\r\n                        >\r\n                            Stockholm, SE\r\n                        </a>{\" \"}\r\n                        in 2017.\r\n                        <br />\r\n                        <br />\r\n                        After relocating to Sweden with my wife, I changed\r\n                        fields from Biology to data and programming. From\r\n                        2018-2019 I worked as a Data Analyst for Radisson Hotel\r\n                        Group in Sweden and currently work as a BI developer for\r\n                        Radisson Hotel Group in Belgium (while still being based\r\n                        in Sweden).\r\n                        <br />\r\n                        <br />\r\n                        We have a 1-year-old son (Jack) and are currently living\r\n                        in Solna. In my spare time I like to play tennis and\r\n                        learn new things (usually related to programming).\r\n                    </p>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\nexport default About;\r\n","import React from \"react\";\r\nimport \"./BiSamples.css\";\r\n\r\nclass BiSamples extends React.Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <div>BiSamples</div>\r\n            </>\r\n        );\r\n    }\r\n}\r\nexport default BiSamples;\r\n","import React from \"react\";\r\nimport \"./Contact.css\";\r\n\r\nclass Contact extends React.Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <div>Contact</div>\r\n            </>\r\n        );\r\n    }\r\n}\r\nexport default Contact;\r\n","import React from \"react\";\r\nimport \"./CV.css\";\r\n\r\nclass CV extends React.Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <div>CV</div>\r\n            </>\r\n        );\r\n    }\r\n}\r\nexport default CV;\r\n","import React from \"react\";\r\nimport \"./Header.css\";\r\nimport logo from \"../../../logo.svg\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport ThemeSwitch from \"../ThemeSwitch/ThemeSwitch\";\r\n\r\ninterface HeaderProps {\r\n    history: any;\r\n}\r\n\r\ninterface HeaderState {\r\n    activeLink: string;\r\n}\r\n\r\nclass Header extends React.Component<HeaderProps, HeaderState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { activeLink: this.props.history.location.pathname };\r\n        console.log(this.props.history.location.pathname);\r\n    }\r\n    handleOnClick = (path: string) => {\r\n        this.props.history.push(path);\r\n        this.setState({ activeLink: this.props.history.location.pathname });\r\n    };\r\n    render() {\r\n        return (\r\n            <>\r\n                <Navbar className=\"navbar\">\r\n                    {/* <Navbar className=\"navbar\"> */}\r\n                    <Navbar.Brand href=\"/\" className=\"navlink\">\r\n                        <img\r\n                            alt=\"logo\"\r\n                            src={logo}\r\n                            width=\"30\"\r\n                            height=\"30\"\r\n                            className=\"d-inline-block align-top Spinning-logo\"\r\n                        />{\" \"}\r\n                        David Ryne Zear\r\n                    </Navbar.Brand>\r\n                    <Nav className=\"ml-auto\">\r\n                        <Nav.Link\r\n                            className={\r\n                                \"navlink\" +\r\n                                (this.state.activeLink === \"/about\"\r\n                                    ? \" active-navlink\"\r\n                                    : \"\")\r\n                            }\r\n                            onClick={() => this.handleOnClick(\"/about\")}\r\n                        >\r\n                            About\r\n                        </Nav.Link>\r\n                        <Nav.Link\r\n                            className={\r\n                                \"navlink\" +\r\n                                (this.state.activeLink === \"/cv\"\r\n                                    ? \" active-navlink\"\r\n                                    : \"\")\r\n                            }\r\n                            onClick={() => this.handleOnClick(\"/cv\")}\r\n                        >\r\n                            Interactive CV\r\n                        </Nav.Link>\r\n                        <Nav.Link\r\n                            className={\r\n                                \"navlink\" +\r\n                                (this.state.activeLink === \"/contact\"\r\n                                    ? \" active-navlink\"\r\n                                    : \"\")\r\n                            }\r\n                            onClick={() => this.handleOnClick(\"/contact\")}\r\n                        >\r\n                            Contact\r\n                        </Nav.Link>\r\n                        <Nav.Link\r\n                            className={\r\n                                \"navlink\" +\r\n                                (this.state.activeLink === \"/biSamples\"\r\n                                    ? \" active-navlink\"\r\n                                    : \"\")\r\n                            }\r\n                            onClick={() => this.handleOnClick(\"/biSamples\")}\r\n                        >\r\n                            BI Samples\r\n                        </Nav.Link>\r\n                    </Nav>\r\n                    <ThemeSwitch />\r\n                </Navbar>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Header);\r\n","import React from \"react\";\r\nimport Home from \"../Components/Pages/Home/Home\";\r\nimport About from \"../Components/Pages/About/About\";\r\nimport BiSamples from \"../Components/Pages/BiSamples/BiSamples\";\r\nimport Contact from \"../Components/Pages/Contact/Contact\";\r\nimport CV from \"../Components/Pages/CV/CV\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport Header from \"../Components/Pieces/Header/Header\";\r\n\r\nclass MyRouter extends React.Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <BrowserRouter basename=\"/\">\r\n                    <Route exact path=\"/about\" component={DefaultContainer} />\r\n                    <Route\r\n                        exact\r\n                        path=\"/biSamples\"\r\n                        component={DefaultContainer}\r\n                    />\r\n                    <Route exact path=\"/cv\" component={DefaultContainer} />\r\n                    <Route exact path=\"/contact\" component={DefaultContainer} />\r\n                    <Route exact path=\"/home\" component={HomeContainer} />\r\n                    <Route exact path=\"/\" component={HomeContainer} />\r\n                </BrowserRouter>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst HomeContainer = () => (\r\n    <>\r\n        <Route exact path=\"/home\" component={Home} />\r\n        <Route path=\"/\" component={Home} />\r\n    </>\r\n);\r\n\r\nconst DefaultContainer = () => (\r\n    <>\r\n        <Header />\r\n        <Route exact path=\"/about\" component={About} />\r\n        <Route exact path=\"/biSamples\" component={BiSamples} />\r\n        <Route exact path=\"/cv\" component={CV} />\r\n        <Route exact path=\"/contact\" component={Contact} />\r\n    </>\r\n);\r\n\r\nexport default MyRouter;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport MyRouter from \"./Router/Router\";\n\nfunction App() {\n    return <MyRouter />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}